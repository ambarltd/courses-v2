{{>blur-background}}



<div class="w-full px-4">
    <div class="flex flex-col md:flex-row justify-center items-center">
        <div class="order-last md:order-first pt-8 pr-0 md:pr-16 md:pt-0 flex justify-center w-full md:w-auto">
            <img src="/assets/images/card.png" class="mx-auto" style="width: 200px; height: fit-content; transform: rotate(-11deg)">
        </div>
        <ul class="order-first md:order-last">
            {{#each locals.products}}
                <li class="p-3 hover:bg-slate-400/25 focus:bg-slate-400/25 active:bg-slate-400/25"
                    style="background-color: {{#if this.isActive}}{{this.hexColor}}{{else}}#f0f0f0{{/if}};">
                    <div class="flex items-center space-x-8 rtl:space-x-reverse">
                        <div class="flex-shrink-0">
                            <div class="w-8 h-8 rounded-full"
                                 style="background-color: {{#if this.isActive}}{{this.hexColor}}{{else}}grey{{/if}}; opacity: .3">
                            </div>
                        </div>
                        <div class="flex-1 min-w-0">
                            <p class="text-sm font-large text-gray-900 truncate">
                                {{this.name}}
                            </p>
                            <p class="text-xs font-medium text-gray-500">
                                {{#if this.isActive}} Accepting New Enrollments {{ else }} Not Accepting New Enrollments {{/if}}
                            </p>
                            <p class="text-xs font-medium text-gray-700">
                                Credit Limit (in cents): ${{formatCentsToDecimal this.creditLimitInCents}}
                            </p>
                            <p class="text-xs font-medium text-gray-700">
                                Annual Fee (in cents): ${{formatCentsToDecimal this.annualFeeInCents}}
                            </p>
                            <p class="text-xs font-medium text-gray-700">
                                Payment Cycle: {{this.paymentCycle}}
                            </p>
                            <p class="text-xs font-medium text-gray-700">
                                Rewards: {{this.reward}}
                            </p>
                        </div>
                        <div class="flex items-center space-x-8">
                            {{#if this.isActive}}
                                <button class="px-4 py-2 bg-blue-600 text-white text-xs rounded"
                                        onclick="openForm('{{this.id}}', '{{this.name}}')" id="{{this.id}}">
                                    Request
                                </button>
                            {{/if}}
                        </div>
                    </div>
                </li>
            {{/each}}
        </ul>
    </div>
</div>

<!-- Popup Form Modal -->
<div id="formModal" class="hidden fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center z-50">
    <div class="bg-white rounded-lg p-6 max-w-md">
        <h3 class="text-sm font-semibold mb-4">Request Enrollment</h3>
        <form id="requestForm">
            <div class="mb-4">
                <label for="annualIncome" class="block text-xs font-medium text-gray-700">Annual Income ($)</label>
                <input type="number" id="annualIncome" name="annualIncome" required
                       class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm">
            </div>
            <button type="submit"
                    class="w-full bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">
                Submit
            </button>
        </form>
    </div>
</div>

<!-- Confirmation Modal -->
<div id="confirmationModal" class="hidden fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center z-50">
    <div class="bg-white rounded-lg p-6 max-w-md">
        <h3 class="text-sm font-semibold mb-4">Request Submitted</h3>
        <p>Your request has been submitted successfully. View status: </p>
        <a id="statusLink" href="/user/enrollments" target="_blank" class="text-blue-600 hover:underline">Here</a>
        <button onclick="closeConfirmation()"
                class="mt-4 bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700">
            Close
        </button>
    </div>
</div>

<!-- Error Modal -->
<div id="errorModal" class="hidden fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center z-50">
    <div class="bg-white rounded-lg p-6 max-w-md">
        <h3 class="text-sm font-semibold mb-4">Previous Application found</h3>
        <p>Your request has not been processed due to a prior request for this card. Please see
        <a id="statusLink" href="/user/enrollments" target="_blank" class="text-blue-600 hover:underline">enrollments</a>
 for more details</p>
        <button onclick="closeError()"
                class="mt-4 bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700">
            Close
        </button>
    </div>
</div>

<script>
    function openForm(productId, productName) {
        console.log("Submitting application for: " + productId + ", " + productName);
        document.getElementById('formModal').classList.remove('hidden');

        document.getElementById('requestForm').onsubmit = async function (event) {
            event.preventDefault();

            const income = document.getElementById('annualIncome').value;

            try {
                const response = await fetch('/card/enrollment', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        accept: 'application/json',
                    },
                    body: JSON.stringify({
                        productId: productId,
                        annualIncomeInCents: income * 100
                    })
                });

                if (response.status === 200) {
                    // Handle success response
                    document.getElementById('formModal').classList.add('hidden');

                    // Show confirmation with link
                    document.getElementById('statusLink').textContent = `View status for ${productName} application`;
                    document.getElementById('statusLink').href = '/user/enrollments';
                    document.getElementById('confirmationModal').classList.remove('hidden');
                } else if (response.status === 409) {
                    // Handle conflict response
                    const errorData = await response.json();
                    console.error('Conflict:', errorData.message || 'Conflict occurred');
                    document.getElementById('formModal').classList.add('hidden');

                    // Show error modal
                    document.getElementById('errorModal').classList.remove('hidden');

                    // disable the apply button from applications until more reloads
                    // bg-blue-600
                    document.getElementById(productId).disabled = true;
                    document.getElementById(productId).textContent = "Unavailable"
                } else {
                    // Handle other failures
                    console.error('Request failed:', response.statusText);
                    alert('Failed to submit request. Please try again.');
                }
            } catch (error) {
                console.error('Error submitting request:', error);
                alert('An error occurred while submitting your request. Please try again.');
            }
        };
    }

    function closeConfirmation() {
        document.getElementById('confirmationModal').classList.add('hidden');
    }
    function closeError() {
        document.getElementById('errorModal').classList.add('hidden');
    }
</script>
